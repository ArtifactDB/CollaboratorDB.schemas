{
    "$id": "factor/v1.json",
    "$schema": "http://json-schema.org/draft-07/schema",
    "_attributes": {
        "format": "text/csv",
        "restore": {
            "R": "alabaster.base::loadDataFrameFactor"
        }
    },
    "additionalProperties": false,
    "allOf": [
        {
            "if": {
                "not": {
                    "properties": {
                        "is_child": {
                            "const": true
                        }
                    }
                }
            },
            "then": {
                "required": [
                    "title",
                    "description",
                    "authors",
                    "species",
                    "genome",
                    "origin",
                    "terms"
                ]
            }
        }
    ],
    "description": "Virtual factor-like object where the unique levels are some vector-like object, corresponding to the Factor class in the [**S4Vectors**](https://bioconductor.org/packages/S4Vectors) Bioconductor package. Each element of the factor is a 1-based integer index that refers to a specific level. The `path` property points to a [**comservatory**](https://ltla.github.io/comservatory)-formatted CSV file containing a data frame with one `index` integer column with the indices for all factor elements. If the `factor.names` property is present, the first column of the data frame contains the names of the factor elements.\n\nConcrete subclasses are expected to define a `levels` property that points to a vector-like object containing the levels.",
    "properties": {
        "$schema": {
            "description": "The schema to use.",
            "type": "string"
        },
        "authors": {
            "items": {
                "description": "Names of the authors in terms of their GitHub logins.",
                "type": "string"
            },
            "type": "array"
        },
        "description": {
            "description": "Description of the resource.",
            "type": "string"
        },
        "factor": {
            "additionalProperties": false,
            "properties": {
                "compression": {
                    "description": "Type of compression applied to the file.",
                    "enum": [
                        "none",
                        "gzip",
                        "bzip2"
                    ],
                    "type": "string"
                },
                "element_data": {
                    "description": "Pointer to a data frame additional annotations for each element in the factor. If omitted, no additional annotations are present.",
                    "properties": {
                        "resource": {
                            "_children": {
                                "contains": [
                                    "data_frame"
                                ]
                            },
                            "properties": {
                                "path": {
                                    "description": "Relative path of the resource from the root of the project directory.",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "Type of file. Local files should be present in the same project directory.",
                                    "enum": [
                                        "local"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "type",
                                "path"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "resource"
                    ],
                    "type": "object"
                },
                "length": {
                    "description": "Length of the factor.",
                    "type": "integer"
                },
                "names": {
                    "default": false,
                    "description": "Whether the factor is named. If `true`, the first column of CSV contains the names of the factor elements.",
                    "type": "boolean"
                },
                "other_data": {
                    "description": "Pointer to a list of additional metadata for this object.",
                    "properties": {
                        "resource": {
                            "_children": {
                                "contains": [
                                    "basic_list"
                                ]
                            },
                            "properties": {
                                "path": {
                                    "description": "Relative path of the resource from the root of the project directory.",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "Type of file. Local files should be present in the same project directory.",
                                    "enum": [
                                        "local"
                                    ],
                                    "type": "string"
                                }
                            },
                            "required": [
                                "type",
                                "path"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "resource"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "compression",
                "length"
            ],
            "type": "object"
        },
        "genome": {
            "description": "UCSC, Ensembl or other genome builds involved in generating this resource.",
            "items": {
                "properties": {
                    "id": {
                        "description": "Identifier for this genome build.",
                        "examples": [
                            "mm10",
                            "NCBIm37"
                        ],
                        "type": "string"
                    },
                    "source": {
                        "description": "Source of the genome build identifier.",
                        "enum": [
                            "Ensembl",
                            "UCSC",
                            "Wormbase",
                            "Flybase"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "source"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "is_child": {
            "default": false,
            "description": "Is this a child document, only to be interpreted in the context of the parent document from which it is linked? This may have implications for search and metadata requirements.",
            "type": "boolean"
        },
        "md5sum": {
            "description": "MD5 checksum for the file.",
            "type": "string"
        },
        "origin": {
            "description": "Origins of this resource.",
            "items": {
                "allOf": [
                    {
                        "if": {
                            "properties": {
                                "source": {
                                    "const": "PubMed"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "id": {
                                    "pattern": "^[0-9]+$",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "source": {
                                    "const": "GEO"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "id": {
                                    "pattern": "^GSE[0-9]+$",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "source": {
                                    "const": "ArrayExpress"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "id": {
                                    "pattern": "^E-MTAB-[0-9]+$",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "source": {
                                    "const": "DOI"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "id": {
                                    "pattern": "^[0-9a-zA-Z\\._-]+/[0-9a-zA-Z\\._-]+$",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "source": {
                                    "const": "URI"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "id": {
                                    "pattern": "^(http|ftp|https|s3|sftp)://",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "properties": {
                    "id": {
                        "description": "Identifier for the resource in the specified `type`.",
                        "type": "string"
                    },
                    "source": {
                        "description": "Source database or repository.",
                        "enum": [
                            "PubMed",
                            "GEO",
                            "ArrayExpress",
                            "DOI",
                            "URI"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "type": "array"
        },
        "path": {
            "description": "Path to the file in the project directory.",
            "type": "string"
        },
        "species": {
            "items": {
                "description": "NCBI taxonomy IDs of the species involved in this resource.",
                "type": "integer"
            },
            "type": "array"
        },
        "terms": {
            "description": "Terms from a controlled vocabulary, used to annotate this resource in a machine-readable manner.",
            "items": {
                "additionalProperties": false,
                "allOf": [
                    {
                        "if": {
                            "properties": {
                                "source": {
                                    "const": "Experimental Factor Ontology"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "id": {
                                    "pattern": "^EFO:[0-9]{7}$"
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "source": {
                                    "const": "Human Disease Ontology"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "id": {
                                    "pattern": "^DOID:[0-9]+$"
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "source": {
                                    "const": "Cell Ontology"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "id": {
                                    "pattern": "^CL:[0-9]{7}$"
                                }
                            }
                        }
                    },
                    {
                        "if": {
                            "properties": {
                                "source": {
                                    "const": "UBERON"
                                }
                            }
                        },
                        "then": {
                            "properties": {
                                "source": {
                                    "const": "^UBERON:[0-9]{7}$"
                                }
                            }
                        }
                    }
                ],
                "properties": {
                    "id": {
                        "description": "Identifier for the term.",
                        "examples": [
                            "EFO:0008913",
                            "DOID:13250",
                            "CL:0000097",
                            "UBERON:0005870"
                        ],
                        "type": "string"
                    },
                    "source": {
                        "description": "Name of the vocabulary or ontology that is the source for this term.",
                        "enum": [
                            "Experimental Factor Ontology",
                            "Human Disease Ontology",
                            "Cell Ontology",
                            "UBERON"
                        ],
                        "type": "string"
                    },
                    "version": {
                        "description": "Version of the vocabulary.",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "source",
                    "version"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "title": {
            "description": "Title of the resource.",
            "type": "string"
        }
    },
    "required": [
        "$schema",
        "factor",
        "md5sum",
        "path"
    ],
    "title": "Factor",
    "type": "object"
}
